class Solution {
    int count=0;
    public int maximumDetonation(int[][] bombs) {
        int n=bombs.length;
        int ans=0;
        for(int i=0;i<n;i++)
        {
            count=0;
            dfs(i,new boolean[n],bombs);
            ans=Math.max(ans,count);
        }
        return ans;
    }
    public void dfs(int index,boolean[] v,int[][] bombs)
    {
        count++;
        v[index]=true;
        int n=bombs.length;
        for(int i=0;i<n;i++)
        {
            if(!v[i] && inRange(bombs[index],bombs[i]))
            {
                v[i]=true;
                dfs(i,v,bombs);
            }
        }
    }
    private boolean inRange(int[] a,int[] b)
    {
        long dx=a[0]-b[0],dy=a[1]-b[1],r=a[2];
        return dx*dx+dy*dy<=r*r;
    }
}
